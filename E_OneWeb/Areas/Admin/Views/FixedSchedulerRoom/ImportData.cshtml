@model E_OneWeb.Models.ViewModels.FixedSchedulerRoomVM
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var title = "Import Data";

}

<br />


<div class="row p-3 border">
    @using (Html.BeginForm("ImportData", "FixedSchedulerRoom", FormMethod.Post, new { enctype = "multipart/form-data", @is_async = "false", @id = "import-file" }))
    {
        <div class="col-12 border-bottom">
            <h2 class="text-primary">@title</h2>
        </div>

        <div class="modal-body">
            <div class="form-horizontal">

                <div class="col-8 pt-2">
                    <div class="form-group row">
                        <div class="col-2">
                            <label>File</label>
                        </div>
                        <div class="col-8">
                            <input type="file" id="fileUpload" name="fileUpload" class="form-control" multiple accept=".xlsx, .xls" />
                        </div>
                        <div class="col-2">
                            <input type="submit" value="Import" id="btnSubmit" style="width:145px" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12 pt-2">
                        @Html.ActionLink("Get Template", "GetTemplate", "FixedSchedulerRoom", new { }, new { @id = "id_template", @class = "btn btn-primary" })
                    </div>
                </div>

                <br />

                <div class="p-4 border rounded" style="min-width:100px;overflow:scroll;">
                    <table id="table_import" class="table table-striped table-bordered" style="width:100%">
                        <thead class="thead-dark">
                            <tr class="table-info">
                                <th> No </th>
                                <th> Valid/ Invalid </th>
                                <th> Remarks </th>
                                <th>
                                    Nama Ruangan
                                </th>
                                <th>
                                    Nama Gedung
                                </th>
                                <th>
                                    Hari
                                </th>
                                <th>
                                    Jam Mulai
                                </th>
                                <th>
                                    Jam Selesai
                                </th>
                                <th>
                                    Prodi
                                </th>
                                <th>
                                    Mata Kuliah
                                </th>
                                <th>
                                    Semester
                                </th>
                                 <th>
                                    Dosen UTS/UAS
                                </th>
                            
                            </tr>
                        </thead>
                    </table>
                </div>

                <div class="row py-2">
                    <div class="col-md-12">
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">

                            <div class="form-group row pt-2">
                                <div class="col-6 text-end">
                                    <label>Valid :</label>
                                </div>
                                <div class="col-6">
                                    <input asp-for="Valid" class="form-control text-end" style="row-gap" id="txtJmlValid" disabled />
                                </div>
                            </div>
                            <div class="form-group row pt-2">
                                <div class="col-6 text-end">
                                    <label>Invalid :</label>
                                </div>
                                <div class="col-6">
                                    <input asp-for="Invalid" class="form-control text-end" style="row-gap" id="txtJmlInvalid" disabled />
                                </div>
                            </div>

                        </div>

                    </div>
                </div>


            </div>
        </div>

        <div class="modal-footer">
            <label class="pull-left">" Hanya status yang valid yang tersimpan di database. "&nbsp; &nbsp;&nbsp;</label>
            <button class="btn btn-success" type="button" title="Process" onclick="ProcessImport()" style="width:145px" id="btn-process">Process</button>
        </div>

    }
</div>


@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        $(document).ready(function () {
            loadDataImport();

        });

        function loadDataImport() {
            table.clear().draw();
            table.destroy();
            dataTable = $('#table_import').DataTable({
                "ajax": {
                    "url": "/Admin/FixedSchedulerRoom/GetImportData"
                },
                "columns": [
                    { "data": "no", "autoWidth": true },
                    { "data": "validinvalid", "autoWidth": true },
                    { "data": "remarks", "autoWidth": true },
                    { "data": "location", "autoWidth": true },
                    { "data": "room", "autoWidth": true },
                    { "data": "days", "autoWidth": true },
                    { "data": "startclock", "autoWidth": true },
                    { "data": "endclock", "autoWidth": true },
                    { "data": "prodi", "autoWidth": true },
                    { "data": "study", "autoWidth": true },
                    { "data": "semester", "autoWidth": true },
                    { "data": "dosen", "autoWidth": true }

                ]
            });
        }

        $(document).ready(function () {
            $('#import-file').submit(function (event) {
                console.log("masuk");

                try {
                    console.log("validation");
                    $.validator.addMethod('accept', function () { return true; });
                    $.validator.unobtrusive.parse($(this));

                    var isValid = $(this).valid();
                    isValid = true;

                    if (isValid) {
                        console.log("valid");
                        event.preventDefault();
                        var isModal = $(this).parents("div[id^=myModal][class^=modal]");
                        var modal = $(isModal).attr("id");
                        var modal_content = $(isModal).find("div[id^=myModalContent]").attr("id");

                        console.log(isModal);

                        var formdata = new FormData($(this).get(0));
                        console.log(formdata);

                        $.ajax({
                            url: this.action,
                            type: this.method,
                            data: formdata,
                            processData: false,
                            contentType: false,
                            beforeSend: function () {

                                $('#modal-loading').modal({
                                    backdrop: 'static',
                                    keyboard: false
                                });
                            },
                            success: function (result) {

                                console.log("Result : " + result);
                                console.log("success");
                                $('#' + modal_content).html(result);

                                if ($.fn.dataTable.isDataTable('#table_import')) {
                                    try {
                                        table = $("#table_import").DataTable();
                                        table.clear().draw();
                                    } catch (e) {
                                        alert(e);
                                    }
                                }
                                else {
                                    table = $("#table_import").DataTable(
                                        {
                                            //"scrollX": true,
                                            "searching": false,
                                            "autoWidth": true,
                                            "createdRow": function (row, data, index) {
                                                //$('td', row).eq(6).attr("style", "text-align: center");
                                            }
                                        });
                                }
                                console.log("try res");
                                try {

                                    if (result.import) {
                                        toastr.success(result.message);
                                        loadDataImport();
                                        CountImport();
                                    }
                                    else {
                                        toastr.error(result.message);
                                    }

                                    if (result.jmlvalid > 0) {
                                        $('#btn-process').removeAttr("disabled");
                                    }
                                    else {
                                        $('#btn-process').attr("disabled", "disabled");
                                    }

                                    console.log("res :" + res);


                                }
                                catch (e) {
                                    if (table.data().length == 0) {
                                        console.log("empty table");
                                    }
                                    else {
                                        console.log("there is data");
                                    }
                                }

                            },
                            complete: function () {

                                console.log("hide loading");
                                setTimeout(function () { $('#modal-fetching').modal('hide'); }, 500);
                                setTimeout(function () { $('#modal-loading').modal('hide'); }, 500);

                            },
                            error: function (xhr, ajaxOptions, thrownError) {
                                //$("#process_button").attr("disabled", "disabled");

                                var erx = xhr.responseText;
                                var regmatch = erx.match(/<title>(.*?)<\/title>/m);
                                var title;
                                if (regmatch.length > 0) {
                                    title = regmatch[1];
                                }
                                else {
                                    title = erx;
                                }
                                console.log("error " + xhr.responseText + "---" + thrownError);
                            }
                        });
                    }
                } catch (e) {
                    //alert(e);
                    console.log("catch");
                    console.log("Error: " + e);
                }

                return false;
            });
        });

        function ProcessImport() {
            //var id = $('#IdHeader').val();
            var url = "/Admin/FixedSchedulerRoom/ProcessImport";
            $.ajax({
                type: "POST",
                url: url,
                success: function (data) {
                    if (data.success) {
                        toastr.success(data.message);
                        dataTable.ajax.reload();
                    }
                    else {
                        toastr.error(data.message);
                    }
                    CountImport();
                }
            });
        }

        function CountImport() {
            var urls = "@Url.Action("CountImport", "FixedSchedulerRoom")";
            $.ajax({
                url: urls,
                dataType: 'json',
                type: 'POST',
                contentType: 'application/json;',
                //data: JSON.stringify(param),
                success: function (data) {
                    $("#txtJmlValid").val(data.valid);
                    $("#txtJmlInvalid").val(data.invalid);

                    console.log("valid : " + parseInt(data.valid));
                    if (parseInt(data.valid) > 0) {
                        console.log("a");
                        $("#btn-process").removeAttr("disabled");
                    }
                    else {
                        console.log("b");
                        $("#btn-process").attr("disabled", "disabled");
                    }
                },
                error: function (request, status, error) {
                    //console.log("error" + error);
                }
            });
        }
    </script>


}